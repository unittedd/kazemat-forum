const express = require("express");
const mysql = require("mysql2");
const bodyParser = require("body-parser");
const path = require("path");

const app = express();
const PORT = 3000;

// –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ "frontend" —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.use(express.static(path.join(__dirname, "../frontend")));



// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const db = mysql.createConnection({
  host: "localhost",
  user: "root", // –£–∫–∞–∂–∏ —Å–≤–æ–π –ª–æ–≥–∏–Ω –æ—Ç MySQL
  password: "@Hasbik1609D", // –£–∫–∞–∂–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –æ—Ç MySQL
  database: "kazemat_forum",
});

db.connect((err) => {
  if (err) {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:", err);
  } else {
    console.log("–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MySQL");
  }
});

app.use(bodyParser.urlencoded({ extended: true }));


const session = require('express-session');

app.use(session({
  secret: 'your-secret-key', // –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ —Å–µ—Å—Å–∏–π
  resave: false,
  saveUninitialized: true,
}));

// –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏–∏
app.post("/login", (req, res) => {
    const { login, password } = req.body;

    const query = "SELECT * FROM users WHERE login = ? AND password = ?";
    db.query(query, [login, password], (err, results) => {
        if (err) {
            console.error(err);
            return res.status(500).send("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞");
        }

        if (results.length > 0) {
            const user = results[0]; // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const profileImage = user.profile_image || 'default.jpg';

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏
            req.session.username = user.username;
            req.session.login = user.login;
            req.session.profileImage = profileImage;

            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è
            res.redirect(`/profile.html?username=${user.username}&login=${user.login}&created_at=${user.created_at}&imageProfile=${profileImage}`);
        } else {
            res.send("–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!");
        }
    });
});



// –ù–∞—Å—Ç—Ä–æ–∏–º Express –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ uploads
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));

app.get('/profile', (req, res) => {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const userId = req.query.userId; // –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ URL
    connection.query('SELECT * FROM users WHERE id = ?', [userId], (err, results) => {
      if (err) throw err;
  
      const user = results[0]; // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç.–∫. id —É–Ω–∏–∫–∞–ª–µ–Ω)
      
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
      const profileData = {
        username: user.username,
        login: user.login,
        created_at: user.created_at,
        imageProfile: user.imageProfile || '/uploads/default.jpg' // –ï—Å–ª–∏ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ
      };
      
      // –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –ø—Ä–æ—Ñ–∏–ª—å)
      res.render('profile', profileData); // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ejs –∏–ª–∏ –¥—Ä—É–≥–æ–π –¥–≤–∏–∂–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤
    });
  });
  
// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ —Å —Ç–µ–º–∞–º–∏
app.get('/api/sections', (req, res) => {
  const query = `
      SELECT sections.id AS section_id, sections.name AS section_name, 
             topics.id AS topic_id, topics.title AS topic_title, 
             topics.messages_count, topics.link 
      FROM sections 
      LEFT JOIN topics ON sections.id = topics.section_id 
      ORDER BY sections.id, topics.id
  `;

  db.query(query, (err, results) => {
      if (err) {
          console.error(err);
          return res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
      }

      const sections = {};
      results.forEach(row => {
          if (!sections[row.section_id]) {
              sections[row.section_id] = { name: row.section_name, topics: [] };
          }
          if (row.topic_id) {
              sections[row.section_id].topics.push({
                  title: row.topic_title,
                  messages: row.messages_count,
                  link: row.link
              });
          }
      });

      res.json(Object.values(sections));
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
app.post('/send-message', (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏–∏
  const { message } = req.body;
  const username = req.session.username;

  if (!username) {
      return res.status(401).json({ error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è' });
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (!message) {
      return res.status(400).json({ error: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' });
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
  const query = "INSERT INTO forum_messages (username, message) VALUES (?, ?)";
  db.query(query, [username, message], (err, result) => {
      if (err) {
          console.error(err);
          return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
      }

      res.status(200).json({ message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ' });
  });
});

app.get('/messages', (req, res) => {
  const query = 'SELECT * FROM forum_messages ORDER BY created_at DESC';
  db.query(query, (err, results) => {
      if (err) {
          console.error(err);
          return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
      }

      res.status(200).json(results);
  });
});


// üîπ –í—ã—Ö–æ–¥
app.get("/logout", (req, res) => {
  res.redirect("/login.html");
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
